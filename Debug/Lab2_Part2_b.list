
Lab2_Part2_b.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000254  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003ec  080003f4  000013f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003ec  080003ec  000013f4  2**0
                  CONTENTS
  4 .ARM          00000000  080003ec  080003ec  000013f4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003ec  080003f4  000013f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003ec  080003ec  000013ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080003f0  080003f0  000013f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000013f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080003f4  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080003f4  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000013f4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000d2a  00000000  00000000  00001424  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002c3  00000000  00000000  0000214e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000098  00000000  00000000  00002418  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000064  00000000  00000000  000024b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000140e1  00000000  00000000  00002514  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000e6e  00000000  00000000  000165f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00083b8f  00000000  00000000  00017463  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0009aff2  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000154  00000000  00000000  0009b038  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000066  00000000  00000000  0009b18c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	080003d4 	.word	0x080003d4

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	080003d4 	.word	0x080003d4

080001d8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
 80001de:	4603      	mov	r3, r0
 80001e0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80001e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001e6:	2b00      	cmp	r3, #0
 80001e8:	db0b      	blt.n	8000202 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80001ea:	79fb      	ldrb	r3, [r7, #7]
 80001ec:	f003 021f 	and.w	r2, r3, #31
 80001f0:	4907      	ldr	r1, [pc, #28]	@ (8000210 <__NVIC_EnableIRQ+0x38>)
 80001f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001f6:	095b      	lsrs	r3, r3, #5
 80001f8:	2001      	movs	r0, #1
 80001fa:	fa00 f202 	lsl.w	r2, r0, r2
 80001fe:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8000202:	bf00      	nop
 8000204:	370c      	adds	r7, #12
 8000206:	46bd      	mov	sp, r7
 8000208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020c:	4770      	bx	lr
 800020e:	bf00      	nop
 8000210:	e000e100 	.word	0xe000e100

08000214 <TIM2_IRQHandler>:

/* USER CODE END 0 */


void TIM2_IRQHandler(void)
{
 8000214:	b480      	push	{r7}
 8000216:	af00      	add	r7, sp, #0
    if (TIM2->SR & TIM_SR_UIF)
 8000218:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800021c:	691b      	ldr	r3, [r3, #16]
 800021e:	f003 0301 	and.w	r3, r3, #1
 8000222:	2b00      	cmp	r3, #0
 8000224:	d013      	beq.n	800024e <TIM2_IRQHandler+0x3a>
    {
        // Clear update interrupt flag
        TIM2->SR &= ~TIM_SR_UIF;
 8000226:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800022a:	691b      	ldr	r3, [r3, #16]
 800022c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8000230:	f023 0301 	bic.w	r3, r3, #1
 8000234:	6113      	str	r3, [r2, #16]
        GPIOD->ODR ^= LED_PIN_ODR_MSK;
 8000236:	4b08      	ldr	r3, [pc, #32]	@ (8000258 <TIM2_IRQHandler+0x44>)
 8000238:	695b      	ldr	r3, [r3, #20]
 800023a:	4a07      	ldr	r2, [pc, #28]	@ (8000258 <TIM2_IRQHandler+0x44>)
 800023c:	f483 4380 	eor.w	r3, r3, #16384	@ 0x4000
 8000240:	6153      	str	r3, [r2, #20]
        GPIOD->ODR ^= GPIOD_PIN6_ODR_MSK;
 8000242:	4b05      	ldr	r3, [pc, #20]	@ (8000258 <TIM2_IRQHandler+0x44>)
 8000244:	695b      	ldr	r3, [r3, #20]
 8000246:	4a04      	ldr	r2, [pc, #16]	@ (8000258 <TIM2_IRQHandler+0x44>)
 8000248:	f083 0340 	eor.w	r3, r3, #64	@ 0x40
 800024c:	6153      	str	r3, [r2, #20]
    }
}
 800024e:	bf00      	nop
 8000250:	46bd      	mov	sp, r7
 8000252:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000256:	4770      	bx	lr
 8000258:	40020c00 	.word	0x40020c00

0800025c <timer2_Int_set>:

void timer2_Int_set()
{
 800025c:	b580      	push	{r7, lr}
 800025e:	af00      	add	r7, sp, #0
    TIM2->PSC = 159;
 8000260:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000264:	229f      	movs	r2, #159	@ 0x9f
 8000266:	629a      	str	r2, [r3, #40]	@ 0x28
    TIM2->ARR = 26999;
 8000268:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 800026c:	f646 1277 	movw	r2, #26999	@ 0x6977
 8000270:	62da      	str	r2, [r3, #44]	@ 0x2c

    TIM2->DIER = TIM_DIER_UIE;
 8000272:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000276:	2201      	movs	r2, #1
 8000278:	60da      	str	r2, [r3, #12]

    NVIC_EnableIRQ(TIM2_IRQn);
 800027a:	201c      	movs	r0, #28
 800027c:	f7ff ffac 	bl	80001d8 <__NVIC_EnableIRQ>

    TIM2->CR1 = TIM_CR1_CEN;
 8000280:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000284:	2201      	movs	r2, #1
 8000286:	601a      	str	r2, [r3, #0]
}
 8000288:	bf00      	nop
 800028a:	bd80      	pop	{r7, pc}

0800028c <timer2_init>:

void timer2_init()
{
 800028c:	b480      	push	{r7}
 800028e:	af00      	add	r7, sp, #0
    RCC->APB1ENR |=RCC_APB1ENR_TIM2EN;
 8000290:	4b05      	ldr	r3, [pc, #20]	@ (80002a8 <timer2_init+0x1c>)
 8000292:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000294:	4a04      	ldr	r2, [pc, #16]	@ (80002a8 <timer2_init+0x1c>)
 8000296:	f043 0301 	orr.w	r3, r3, #1
 800029a:	6413      	str	r3, [r2, #64]	@ 0x40
}
 800029c:	bf00      	nop
 800029e:	46bd      	mov	sp, r7
 80002a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002a4:	4770      	bx	lr
 80002a6:	bf00      	nop
 80002a8:	40023800 	.word	0x40023800

080002ac <init_led>:
void init_led()
{
 80002ac:	b480      	push	{r7}
 80002ae:	af00      	add	r7, sp, #0
	/* ULED with a delay */
	//Send the clock to port D
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 80002b0:	4b11      	ldr	r3, [pc, #68]	@ (80002f8 <init_led+0x4c>)
 80002b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002b4:	4a10      	ldr	r2, [pc, #64]	@ (80002f8 <init_led+0x4c>)
 80002b6:	f043 0308 	orr.w	r3, r3, #8
 80002ba:	6313      	str	r3, [r2, #48]	@ 0x30

    // Configure PD12 as output
    GPIOD->MODER &= ~(3U << (2 * LED_PIN));
 80002bc:	4b0f      	ldr	r3, [pc, #60]	@ (80002fc <init_led+0x50>)
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	4a0e      	ldr	r2, [pc, #56]	@ (80002fc <init_led+0x50>)
 80002c2:	f023 5340 	bic.w	r3, r3, #805306368	@ 0x30000000
 80002c6:	6013      	str	r3, [r2, #0]
    GPIOD->MODER |= (1U << (2 * LED_PIN));
 80002c8:	4b0c      	ldr	r3, [pc, #48]	@ (80002fc <init_led+0x50>)
 80002ca:	681b      	ldr	r3, [r3, #0]
 80002cc:	4a0b      	ldr	r2, [pc, #44]	@ (80002fc <init_led+0x50>)
 80002ce:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80002d2:	6013      	str	r3, [r2, #0]

    GPIOD->MODER &= ~(3U << (2 * GPIOD_PIN6));
 80002d4:	4b09      	ldr	r3, [pc, #36]	@ (80002fc <init_led+0x50>)
 80002d6:	681b      	ldr	r3, [r3, #0]
 80002d8:	4a08      	ldr	r2, [pc, #32]	@ (80002fc <init_led+0x50>)
 80002da:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80002de:	6013      	str	r3, [r2, #0]
    GPIOD->MODER |= (1U << (2 * GPIOD_PIN6));
 80002e0:	4b06      	ldr	r3, [pc, #24]	@ (80002fc <init_led+0x50>)
 80002e2:	681b      	ldr	r3, [r3, #0]
 80002e4:	4a05      	ldr	r2, [pc, #20]	@ (80002fc <init_led+0x50>)
 80002e6:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80002ea:	6013      	str	r3, [r2, #0]

}
 80002ec:	bf00      	nop
 80002ee:	46bd      	mov	sp, r7
 80002f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f4:	4770      	bx	lr
 80002f6:	bf00      	nop
 80002f8:	40023800 	.word	0x40023800
 80002fc:	40020c00 	.word	0x40020c00

08000300 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000300:	b580      	push	{r7, lr}
 8000302:	af00      	add	r7, sp, #0

    init_led();
 8000304:	f7ff ffd2 	bl	80002ac <init_led>

    timer2_init();
 8000308:	f7ff ffc0 	bl	800028c <timer2_init>

    timer2_Int_set();
 800030c:	f7ff ffa6 	bl	800025c <timer2_Int_set>

    while (1)
 8000310:	bf00      	nop
 8000312:	e7fd      	b.n	8000310 <main+0x10>

08000314 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000314:	b480      	push	{r7}
 8000316:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000318:	4b06      	ldr	r3, [pc, #24]	@ (8000334 <SystemInit+0x20>)
 800031a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800031e:	4a05      	ldr	r2, [pc, #20]	@ (8000334 <SystemInit+0x20>)
 8000320:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8000324:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000328:	bf00      	nop
 800032a:	46bd      	mov	sp, r7
 800032c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000330:	4770      	bx	lr
 8000332:	bf00      	nop
 8000334:	e000ed00 	.word	0xe000ed00

08000338 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8000338:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8000370 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 800033c:	f7ff ffea 	bl	8000314 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8000340:	480c      	ldr	r0, [pc, #48]	@ (8000374 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8000342:	490d      	ldr	r1, [pc, #52]	@ (8000378 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8000344:	4a0d      	ldr	r2, [pc, #52]	@ (800037c <LoopFillZerobss+0x1a>)
  movs r3, #0
 8000346:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000348:	e002      	b.n	8000350 <LoopCopyDataInit>

0800034a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800034a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800034c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800034e:	3304      	adds	r3, #4

08000350 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000350:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000352:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000354:	d3f9      	bcc.n	800034a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000356:	4a0a      	ldr	r2, [pc, #40]	@ (8000380 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8000358:	4c0a      	ldr	r4, [pc, #40]	@ (8000384 <LoopFillZerobss+0x22>)
  movs r3, #0
 800035a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800035c:	e001      	b.n	8000362 <LoopFillZerobss>

0800035e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800035e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000360:	3204      	adds	r2, #4

08000362 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000362:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000364:	d3fb      	bcc.n	800035e <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8000366:	f000 f811 	bl	800038c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800036a:	f7ff ffc9 	bl	8000300 <main>
  bx  lr    
 800036e:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8000370:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000374:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000378:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800037c:	080003f4 	.word	0x080003f4
  ldr r2, =_sbss
 8000380:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000384:	2000001c 	.word	0x2000001c

08000388 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000388:	e7fe      	b.n	8000388 <ADC_IRQHandler>
	...

0800038c <__libc_init_array>:
 800038c:	b570      	push	{r4, r5, r6, lr}
 800038e:	4d0d      	ldr	r5, [pc, #52]	@ (80003c4 <__libc_init_array+0x38>)
 8000390:	4c0d      	ldr	r4, [pc, #52]	@ (80003c8 <__libc_init_array+0x3c>)
 8000392:	1b64      	subs	r4, r4, r5
 8000394:	10a4      	asrs	r4, r4, #2
 8000396:	2600      	movs	r6, #0
 8000398:	42a6      	cmp	r6, r4
 800039a:	d109      	bne.n	80003b0 <__libc_init_array+0x24>
 800039c:	4d0b      	ldr	r5, [pc, #44]	@ (80003cc <__libc_init_array+0x40>)
 800039e:	4c0c      	ldr	r4, [pc, #48]	@ (80003d0 <__libc_init_array+0x44>)
 80003a0:	f000 f818 	bl	80003d4 <_init>
 80003a4:	1b64      	subs	r4, r4, r5
 80003a6:	10a4      	asrs	r4, r4, #2
 80003a8:	2600      	movs	r6, #0
 80003aa:	42a6      	cmp	r6, r4
 80003ac:	d105      	bne.n	80003ba <__libc_init_array+0x2e>
 80003ae:	bd70      	pop	{r4, r5, r6, pc}
 80003b0:	f855 3b04 	ldr.w	r3, [r5], #4
 80003b4:	4798      	blx	r3
 80003b6:	3601      	adds	r6, #1
 80003b8:	e7ee      	b.n	8000398 <__libc_init_array+0xc>
 80003ba:	f855 3b04 	ldr.w	r3, [r5], #4
 80003be:	4798      	blx	r3
 80003c0:	3601      	adds	r6, #1
 80003c2:	e7f2      	b.n	80003aa <__libc_init_array+0x1e>
 80003c4:	080003ec 	.word	0x080003ec
 80003c8:	080003ec 	.word	0x080003ec
 80003cc:	080003ec 	.word	0x080003ec
 80003d0:	080003f0 	.word	0x080003f0

080003d4 <_init>:
 80003d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003d6:	bf00      	nop
 80003d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003da:	bc08      	pop	{r3}
 80003dc:	469e      	mov	lr, r3
 80003de:	4770      	bx	lr

080003e0 <_fini>:
 80003e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003e2:	bf00      	nop
 80003e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003e6:	bc08      	pop	{r3}
 80003e8:	469e      	mov	lr, r3
 80003ea:	4770      	bx	lr
